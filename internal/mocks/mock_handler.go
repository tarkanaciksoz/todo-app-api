// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tarkanaciksoz/api-todo-app/internal/todo (interfaces: Handler)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHandler is a mock of Handler interface.
type MockHandler struct {
	ctrl     *gomock.Controller
	recorder *MockHandlerMockRecorder
}

// MockHandlerMockRecorder is the mock recorder for MockHandler.
type MockHandlerMockRecorder struct {
	mock *MockHandler
}

// NewMockHandler creates a new mock instance.
func NewMockHandler(ctrl *gomock.Controller) *MockHandler {
	mock := &MockHandler{ctrl: ctrl}
	mock.recorder = &MockHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandler) EXPECT() *MockHandlerMockRecorder {
	return m.recorder
}

// CreateTodo mocks base method.
func (m *MockHandler) CreateTodo(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateTodo", arg0, arg1)
}

// CreateTodo indicates an expected call of CreateTodo.
func (mr *MockHandlerMockRecorder) CreateTodo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTodo", reflect.TypeOf((*MockHandler)(nil).CreateTodo), arg0, arg1)
}

// DeleteTodo mocks base method.
func (m *MockHandler) DeleteTodo(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteTodo", arg0, arg1)
}

// DeleteTodo indicates an expected call of DeleteTodo.
func (mr *MockHandlerMockRecorder) DeleteTodo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteTodo", reflect.TypeOf((*MockHandler)(nil).DeleteTodo), arg0, arg1)
}

// GetTodo mocks base method.
func (m *MockHandler) GetTodo(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetTodo", arg0, arg1)
}

// GetTodo indicates an expected call of GetTodo.
func (mr *MockHandlerMockRecorder) GetTodo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTodo", reflect.TypeOf((*MockHandler)(nil).GetTodo), arg0, arg1)
}

// ListTodos mocks base method.
func (m *MockHandler) ListTodos(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ListTodos", arg0, arg1)
}

// ListTodos indicates an expected call of ListTodos.
func (mr *MockHandlerMockRecorder) ListTodos(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTodos", reflect.TypeOf((*MockHandler)(nil).ListTodos), arg0, arg1)
}

// MarkTodo mocks base method.
func (m *MockHandler) MarkTodo(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "MarkTodo", arg0, arg1)
}

// MarkTodo indicates an expected call of MarkTodo.
func (mr *MockHandlerMockRecorder) MarkTodo(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MarkTodo", reflect.TypeOf((*MockHandler)(nil).MarkTodo), arg0, arg1)
}
